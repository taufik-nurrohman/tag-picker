extends ../_index.pug

block state
  - const title = 'Tag Picker'
  - const scripts = ['../index.min.js']
  - const styles = ['../index.min.css']

block script
  script
    | const picker = new TP(document.querySelector('input'), {
    |     escape: ['/', '\\', '\t', '\n'],
    |     join: '/'
    | });

block style
  style
    | .tag-picker {
    |   padding: 0 .25em;
    | }
    | .tag-picker__tag {
    |   margin: 0;
    |   padding: 0;
    | }
    | .tag-picker__tag:not(.tag-picker__input),
    | .tag-picker__tag:not(.tag-picker__input):hover,
    | .tag-picker__tag:not(.tag-picker__input):focus,
    | .tag-picker__tag:not(.tag-picker__input):active {
    |   background: none;
    | }
    | .tag-picker__tag--selected:not(.tag-picker__input),
    | .tag-picker__tag--selected:not(.tag-picker__input):hover,
    | .tag-picker__tag--selected:not(.tag-picker__input):focus,
    | .tag-picker__tag--selected:not(.tag-picker__input):active {
    |   background: #ff0;
    | }
    | .tag-picker__tag:not(.tag-picker__input)::before {
    |   color: #00f;
    | }
    | .tag-picker__tag:not(.tag-picker__input)::after {
    |   content: '/'
    | }
    | .tag-picker__tag-x {
    |   display: none;
    | }
    | .tag-picker__tags::before {
    |   content: '/srv/http/';
    | }

block content
  main
    p: input(type='text' value='foo/bar')