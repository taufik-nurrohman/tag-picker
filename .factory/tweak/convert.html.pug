extends ../_index.pug

block state
  - const scripts = ['../index.min.js']
  - const styles = ['../index.min.css']
  - const title = 'Tag Picker'

block script
  script
    | TagPicker._._set = function (tag) {
    |     let value = tag.getAttribute('data-value'),
    |         views = { cry: '😭', happy: '😄', sad: '☹️', smile: '☺️' };
    |     views[value] && (tag.children[0].textContent = views[value]);
    | };
    |
    | const picker = new TagPicker(document.querySelector('input'));
    | const views = { cry: '😭', happy: '😄', sad: '☹️', smile: '☺️' };
    |
    | picker.on('set.tag', function (name) {
    |     if (!views[name] || !this.tags.at(name)) {
    |         return;
    |     }
    |     this.tags.at(name)[2].querySelector('[role=none]').textContent = views[name];
    | });
    |
    | picker.tags.values.forEach((v, k) => {
    |     if (!views[k]) {
    |         return;
    |     }
    |     v[2].querySelector('[role=none]').textContent = views[k];
    | });

block style
  style
    | .tag-picker {
    |   width: 100%;
    | }

block content
  main
    form(method='get')
      p Convert tag view based on its value. Try #[mark(style={'user-select': 'all'} tabindex='0') cry], #[mark(style={'user-select': 'all'} tabindex='0') happy], #[mark(style={'user-select': 'all'} tabindex='0') sad], #[mark(style={'user-select': 'all'} tabindex='0') smile].
      p: input(name='test' type='text' value='happy, sad')
      = ' '
      p: button(type='submit') Submit